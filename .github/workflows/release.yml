name: Release

on:
  push:
    tags:
      - '*'

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-16.04]
        rust: [nightly]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
      with:
        submodules: true
    - name: Install dependencies
      shell: bash
      run: |
        sudo add-apt-repository ppa:beineri/opt-qt-5.12.1-xenial
        sudo add-apt-repository ppa:papirus/papirus
        sudo add-apt-repository ppa:hda-me/qt5ct
        sudo apt-get update -y
        sudo apt-get install -y libdbus-1-dev \
        mesa-common-dev \
        qt512declarative \
        qt512quickcontrols2 \
        qt512graphicaleffects \
        qt512svg \
        qt512tools \
        fcitx-frontend-qt5 \
        qt5-style-plugins \
        qt5-style-kvantum \
        kde-style-breeze \
        kde-style-qtcurve-qt5 \
        kde-style-oxygen-qt5 \
        qt5ct
    - name: Install linuxdeployqt
      run: |
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod +x ./linuxdeployqt-continuous-x86_64.AppImage
    - name: Build release
      id: release
      env:
        AVOS_ID: ${{ secrets.AVOS_ID }}
        AVOS_KEY: ${{ secrets.AVOS_KEY }}
      run: |
        source /opt/qt512/bin/qt512-env.sh || true
        cargo build --release
        cd linuxdeployqt.AppDir
        cp ../target/release/biying .
        cp ../assets/livewallpaper.svg .
        sudo cp -vnpr /usr/lib/x86_64-linux-gnu/qt5/plugins/* $QTDIR/plugins/
        export VERSION=`git describe --tags`
        ../linuxdeployqt-continuous-x86_64.AppImage biying.desktop -appimage -no-translations -no-copy-copyright-files -verbose=2 -qmldir=../assets -extra-plugins=styles/libkvantum.so,styles/breeze.so,styles/qtcurve.so,styles/oxygen.so,platformthemes/libqt5ct.so,styles/libqt5ct-style.so
        echo "::set-output name=APPIMAGE::$(ls -t *.AppImage | head -1)"
    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ steps.release.outputs.APPIMAGE }}
